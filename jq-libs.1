.TH "jq-libs" 1

.SH "NAME"
.PP
jq\-libs \- Collection of jq modules

.SH "SETUP"
.PP
Clone the repository:
.RS
.PP
.nf
git clone https://github\.com/brainwo/jq\-libs\.git
.fi
.RE
.PP
Import the library when invoking `\f[CR]jq\fP`:
.RS
.PP
.nf
jq \-L "path/to/cloned/git/repository" {\.\.\.}
.fi
.RE
.PP
Optionally, you can set an ALIAS(1P)[1] to `\f[CR]jq\fP`\.
.sp
[1] https://man\.archlinux\.org/man/alias\.1p jq\-libs
.nf
.fi

.PP
Optionally, you can set a ZSH alias (zsh\-lovers(1)[2]) to this README
page and read it anytime using your favorite pager:
.sp
[2] https://man\.archlinux\.org/man/zsh\-lovers\.1 jq\-libs
.nf
.fi

.RS
.PP
.nf
alias \-g jq\-libs="path/to/cloned/git/repository/jq\-libs\.1"
man jq\-libs
.fi
.RE

.SH "AVAILABLE LIBRARIES"
.PP
htmld[3]: The inverse of `\f[CR]@html\fP`\.
.sp
[3] \./htmld\.jq jq\-libs
.nf
.fi

.RS
.PP
.nf
jq `include "htmld"; htmld`
   "This works if x &lt; y"
=> "This works if x < y"
.fi
.RE
.PP
sql[4]: Encode string to valid sql insert for text\. It's short,
you can write it without using the module\. But writing it might be
painful in a shell script\.
.sp
[4] \./sql\.jq jq\-libs
.nf
.fi

.RS
.PP
.nf
jq `gsub("'"; "''") | "'\(\.)'"`
   "You probably don't need this module"
=> "'You probably don''t need this module'"
.fi
.RE
.PP
sqld[5]: Inverse of
.sp
[5] \./sql\.jq jq\-libs
.nf
.fi

.RS
.PP
.nf
jq `include "sql"; sqld`
   "'This module isn''t that useless after all"
=> "This module isn't that useless after all"
.fi
.RE

.SH "FOR MAINTAINER/CONTRIBUTOR"

.SS "Generate `\f[CR]jq-libs.1\fP` from `\f[CR]README.md\fP`:"
.PP
Use mandown[6]\.
.sp
[6] https://gitlab\.com/kornelski/mandown jq\-libs
.nf
.fi

.RS
.PP
.nf
mandown README\.md "jq\-libs" 1 > jq\-libs\.1
.fi
.RE

.SH "BUGS"
.PP
Report them here in https://github\.com/brainwo/jq\-libs/issues\.
